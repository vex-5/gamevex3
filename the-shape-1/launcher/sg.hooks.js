window.console.log=()=>{};var SG_Hooks={documentLoaded:!1,getLanguagesCalled:!1,startCalled:!1,levelUpCalled:!1,gameOverCalled:!1,setOrientationHandlerCalled:!1,setResizeHandlerCalled:!1,setPauseHandlerCalled:!1,setUnpauseHandlerCalled:!1,storageGetUsed:!1,storageSetUsed:!1,_getQueryParam:function(e){for(var o=window.location.search.substring(1).split("&"),t=0;t<o.length;t++){var a=o[t].split("=");if(decodeURIComponent(a[0])==e)return decodeURIComponent(a[1])}},_getLocaleParam:function(){return this._getQueryParam("locale")},getLanguage:function(e){if(!SG_Hooks.documentLoaded)throw"Softgames - getLanguage: Do not call getLanguage before document is fully loaded. use window.onload to start your game!";var o=navigator.language||navigator.userLanguage;-1!==o.indexOf("-")&&(o=o.split("-")[0]);const t=["en","cn","de","es","fr","it","pt","ru","tr","nl","pl"];-1===t.indexOf(o)&&(o=t[0]),SG_log("Softgames - getLanguage: '"+t.toString()+"' successfully initiated. Language is '"+o+"'"),SG_Hooks.getLanguagesCalled=!0;const a=new Proxy(new URLSearchParams(window.location.search),{get:(e,o)=>e.get(o)});return a.lang?a.lang:o},getGameConfig:function(){return"eyJsZXZlbHMiOnsiMSI6eyJ0aW1lIjoxOCwicG9pbnRzIjoxMDB9fX0="},start:function(){if(!SG_Hooks.documentLoaded)throw"Softgames - start: Do not call start() before document is fully loaded. use window.onload to start your game!";SG_Hooks.startCalled=!0},isEnabledIncentiviseButton:function(){return!0},levelStarted:function(e){if(!SG_isNothing(e)&&!SG_isInt(e))throw"Softgames - levelStarted(level): The 'level'-parameter must be an integer '"+typeof e+"' given.";SG_log("Softgames - levelStarted: call successful - level="+e),SG_Hooks.levelStartedCalled=!0},levelFinished:function(e,o){if(!SG_isNothing(e)&&!SG_isInt(e))throw"Softgames - levelFinished(level,score): The 'level'-parameter must be an integer '"+typeof e+"' given.";if(!SG_isNothing(o)&&!SG_isInt(o))throw"Softgames - levelFinished(level,score): The 'score'-parameter must be an integer '"+typeof e+"' given.";SG_log("Softgames - levelFinished: call successful - level="+e+", score="+o),SG_Hooks.levelFinishedCalled=!0},levelUp:function(e,o){if(!SG_isNothing(e)&&!SG_isInt(e))throw"Softgames - levelUp(level,score): The 'level'-parameter must be an integer '"+typeof e+"' given.";if(!SG_isNothing(o)&&!SG_isInt(o))throw"Softgames - levelUp(level,score): The 'score'-parameter must be an integer, '"+typeof o+"' given.";SG_log("Softgames - levelUp: call successful - level="+e+", score="+o),SG_Hooks.levelUpCalled=!0},gameOver:function(e,o){if(!SG_isNothing(e)&&!SG_isInt(e))throw"Softgames - gameOver(level,score): The 'level'-parameter must be an integer '"+typeof e+"' given.";if(!SG_isNothing(o)&&!SG_isInt(o))throw"Softgames - gameOver(level,score): The 'score'-parameter must be an integer, '"+typeof o+"' given.";SG_log("Softgames - gameOver: call successful - level="+e+", score="+o),SG_Hooks.gameOverCalled=!0},setOrientationHandler:function(e){if(!SG_isFunction(e))throw"Softgames - setOrientationHandler: The 'f'-parameter must be a function, '"+typeof e+"' given.";SG_log("Softgames - setOrientationHandler: call successful - orientationHandler="+e),SG_Hooks.setOrientationHandlerCalled=!0},setResizeHandler:function(e){if(!SG_isFunction(e))throw"Softgames - setResizeHandler: The 'f'-parameter must be a function, '"+typeof e+"' given.";SG_log("Softgames - setResizeHandler: call successful - resizeHandler="+e),SG_Hooks.setResizeHandlerCalled=!0},setPauseHandler:function(e){if(!SG_isFunction(e))throw"Softgames - setPauseHandler: The 'f'-parameter must be a function, '"+typeof e+"' given.";SG_log("Softgames - setPauseHandler: call successful - pauseHandler="+e),SG_Hooks.setPauseHandlerCalled=!0},setUnpauseHandler:function(e){if(!SG_isFunction(e))throw"Softgames - setUnpauseHandler: The 'f'-parameter must be a function, '"+typeof e+"' given.";SG_log("Softgames - setUnpauseHandler: call successful - pauseHandler="+e),SG_Hooks.setUnpauseHandlerCalled=!0},triggerIncentivise:function(e){e(!0)},triggerMidroll:function(e){_azerionIntegrationSDK.showInterstitialAd("midroll",(function(){e()}))},buildKey:function(e){return location.pathname+"_"+e},getStorageItem:function(e){SG_Hooks.storageGetUsed=!0;try{return localStorage.getItem(SG_Hooks.buildKey(e))}catch(e){return}},setStorageItem:function(e,o){SG_Hooks.storageSetUsed=!0;try{localStorage.setItem(SG_Hooks.buildKey(e),o)}catch(e){return}},createSplashLoader:function(){window._azerionIntegrationSDK.createSplashLoader("The Shape"),window._azerionIntegrationSDK.addListeners(Az_pauseforAd,Az_resumeAfterAd)},onLoadProgress:function(e){window._azerionIntegrationSDK.onLoadProgress(e)},loadingComplete:function(){window._azerionIntegrationSDK.removeSplashLoader((()=>{}))}};Az_pauseforAd=function(){},Az_resumeAfterAd=function(){},SG_isInt=function(e){return e===+e&&e===(0|e)},SG_isNothing=function(e){return""===e||null==e},SG_isFunction=function(e){return"function"==typeof e},SG_log=function(e){},SG_load=function(){egret_h5.startGame(),SG_Hooks.documentLoaded=!0},SG_check=function(){var e=!1;return SG_log("-------- Checking integration of Softgames-Hooks --------"),SG_Hooks.getLanguagesCalled||(SG_log("SG_Hooks.getLanguage was not called. You have to call SG_Hooks.getLanguage(['en','es',...]); *after* window.onload."),e=!0),SG_Hooks.setOrientationHandlerCalled||(SG_log("SG_Hooks.setOrientationHandler was not called. You have to provide a game-function, that handles changes of orientation for the game."),e=!0),SG_Hooks.setResizeHandlerCalled||(SG_log("SG_Hooks.setResizeHandler was not called. You have to provide a game-function, that handles changes of window-size for the game."),e=!0),SG_Hooks.setPauseHandlerCalled||(SG_log("SG_Hooks.setPauseHandler was not called. You have to provide a game-function, that handles pause game."),e=!0),SG_Hooks.setUnpauseHandlerCalled||(SG_log("SG_Hooks.setUnpauseHandler was not called. You have to provide a game-function, that handles unpause game."),e=!0),SG_Hooks.startCalled||(SG_log("SG_Hooks.start was not called. You have to call SG_Hooks.start(); when player starts the game."),e=!0),SG_Hooks.levelUpCalled||SG_Hooks.gameOverCalled||(SG_log("You have to call SG_Hooks.levelUp or SG_Hooks.gameOver when player leveled up or game is over."),e=!0),SG_Hooks.levelStartedCalled||(SG_log("You have to call SG_Hooks.levelStarted when player starts playing game."),e=!0),SG_Hooks.levelFinishedCalled||(SG_log("You have to call SG_Hooks.levelFinished when player finish level/game."),e=!0),SG_Hooks.storageSetUsed||(SG_Log("Game is not using local storage via SG Hooks"),e=!0),SG_Hooks.storageSetUsed||(SG_Log("Game is not using local storage via SG Hooks"),e=!0),e?(SG_log("-------- Check FAILED --------"),!1):(SG_log("-------- Check PASSED --------"),!0)},window.attachEvent?window.attachEvent("onload",SG_load):window.addEventListener("load",SG_load,!0);